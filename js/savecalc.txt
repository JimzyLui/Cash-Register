/**
 * Declare a function named `calculatorModule`
 * this function will have two private variables declared inside of it.
 * @variable PRIVATE { Number } `memory`
 * @variable PRIVATE { Number } `total`
 * @return {object} `calculator` object that can be used
 */
function calculatorModule() {
  var memory = 0;
  var total = 0;
  var isNum = function(n) {
    return n.match(/[0-9]/g);
  };
  var calculator = {
    load: function(x) {
      if (!(typeof x === "number")) {
        throw error;
      }
      total = x;
      return total;
    },
    getTotal: function() {
      return total;
    },
    /**
     * sets the `total` to the number passed in
     * @param  { Number } x
     * @return { Number }    current total
     */
    /**
     * Sums the value passed in with `total`
     * @param { Number } x
     */
    add: function(x) {
      if (!(typeof x === "number")) {
        throw error;
      }
      total += x;
      return total;
    },
    /**
     * Return the value of `total`
     * @return { Number }
     */
    /**
     * Subtracts the value passed in from `total`
     * @param  { Number } x
     */
    subtract: function(x) {
      if (!(typeof x === "number")) {
        throw error;
      }
      total -= x;
      return total;
    },
    /**
     * Multiplies the value by `total`
     * @param  { Number } x
     */
    multiply: function(x) {
      if (!(typeof x === "number")) {
        throw error;
      }
      total *= x;
      return total;
    },
    /**
     * Divides the value passing in by `total`
     * @param  { Number } x
     */
    divide: function(x) {
      if (!(typeof x === "number")) {
        throw error;
      }
      if (x === 0) {
        throw error;
      }
      total /= x;
      return total;
    },
    /**
     * Return the value stored at `memory`
     * @return { Number }
     */
    recallMemory: function() {
      return memory;
    },
    /**
     * Stores the value of `total` to `memory`
     */
    //  saveMemory:  function() {
    //     memory = total;
    //   },
    //   calculator.saveMemory = () =>{
    //     memory = total;
    // };
    /**
     * Clear the value stored at `memory`
     */
    clearMemory: function() {
      memory = 0;
    }
  };

  /**
   * Validation
   */

  // return calculator;
  return {
    // add: add,
    // subtract: subtract,
    // multiply: multiply,
    // divide: divide
    // ,
    // recallMemory: recallMemory,
    // saveMemory: saveMemory,
    // clearMemory: clearMemory
  };
}
